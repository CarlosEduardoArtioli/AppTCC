{"version":3,"sources":["node_modules/@ionic/core/dist/esm/framework-delegate-c2e2e1f4.js","node_modules/@ionic/core/dist/esm/haptic-c8f1473e.js","node_modules/@ionic/core/dist/esm/index-1469ea79.js","node_modules/@ionic/core/dist/esm/index-3476b023.js","node_modules/@ionic/core/dist/esm/spinner-configs-28520d80.js","node_modules/@ionic/core/dist/esm/theme-18cbe2cc.js","src/app/services/device.service.ts","src/app/services/room.service.ts","src/app/services/timer.service.ts"],"names":[],"mappings":"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","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\r\n    if (delegate) {\r\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\r\n    }\r\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\r\n        throw new Error('framework delegate is missing');\r\n    }\r\n    const el = (typeof component === 'string')\r\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\r\n        : component;\r\n    if (cssClasses) {\r\n        cssClasses.forEach(c => el.classList.add(c));\r\n    }\r\n    if (componentProps) {\r\n        Object.assign(el, componentProps);\r\n    }\r\n    container.appendChild(el);\r\n    if (el.componentOnReady) {\r\n        await el.componentOnReady();\r\n    }\r\n    return el;\r\n};\r\nconst detachComponent = (delegate, element) => {\r\n    if (element) {\r\n        if (delegate) {\r\n            const container = element.parentElement;\r\n            return delegate.removeViewFromDom(container, element);\r\n        }\r\n        element.remove();\r\n    }\r\n    return Promise.resolve();\r\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\r\n * Check to see if the Haptic Plugin is available\r\n * @return Returns `true` or false if the plugin is available\r\n */\r\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\r\nconst hapticSelection = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.selection();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\r\nconst hapticSelectionStart = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionStart();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\r\nconst hapticSelectionChanged = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionChanged();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\r\nconst hapticSelectionEnd = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionEnd();\r\n    }\r\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","import { w as writeTask } from './core-0a8d4d2e.js';\nimport { b as LIFECYCLE_WILL_LEAVE, L as LIFECYCLE_WILL_ENTER, a as LIFECYCLE_DID_ENTER, c as LIFECYCLE_DID_LEAVE } from './constants-3c3e1099.js';\n\nconst iosTransitionAnimation = () => import('./ios.transition-b4752795.js');\r\nconst mdTransitionAnimation = () => import('./md.transition-5ee3c425.js');\r\nconst transition = (opts) => {\r\n    return new Promise((resolve, reject) => {\r\n        writeTask(() => {\r\n            beforeTransition(opts);\r\n            runTransition(opts).then(result => {\r\n                if (result.animation) {\r\n                    result.animation.destroy();\r\n                }\r\n                afterTransition(opts);\r\n                resolve(result);\r\n            }, error => {\r\n                afterTransition(opts);\r\n                reject(error);\r\n            });\r\n        });\r\n    });\r\n};\r\nconst beforeTransition = (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    setZIndex(enteringEl, leavingEl, opts.direction);\r\n    if (opts.showGoBack) {\r\n        enteringEl.classList.add('can-go-back');\r\n    }\r\n    else {\r\n        enteringEl.classList.remove('can-go-back');\r\n    }\r\n    setPageHidden(enteringEl, false);\r\n    if (leavingEl) {\r\n        setPageHidden(leavingEl, false);\r\n    }\r\n};\r\nconst runTransition = async (opts) => {\r\n    const animationBuilder = await getAnimationBuilder(opts);\r\n    const ani = (animationBuilder)\r\n        ? animation(animationBuilder, opts)\r\n        : noAnimation(opts); // fast path for no animation\r\n    return ani;\r\n};\r\nconst afterTransition = (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    enteringEl.classList.remove('ion-page-invisible');\r\n    if (leavingEl !== undefined) {\r\n        leavingEl.classList.remove('ion-page-invisible');\r\n    }\r\n};\r\nconst getAnimationBuilder = async (opts) => {\r\n    if (!opts.leavingEl || !opts.animated || opts.duration === 0) {\r\n        return undefined;\r\n    }\r\n    if (opts.animationBuilder) {\r\n        return opts.animationBuilder;\r\n    }\r\n    const getAnimation = (opts.mode === 'ios')\r\n        ? (await iosTransitionAnimation()).iosTransitionAnimation\r\n        : (await mdTransitionAnimation()).mdTransitionAnimation;\r\n    return getAnimation;\r\n};\r\nconst animation = async (animationBuilder, opts) => {\r\n    await waitForReady(opts, true);\r\n    const trans = animationBuilder(opts.baseEl, opts);\r\n    fireWillEvents(opts.enteringEl, opts.leavingEl);\r\n    const didComplete = await playTransition(trans, opts);\r\n    if (opts.progressCallback) {\r\n        opts.progressCallback(undefined);\r\n    }\r\n    if (didComplete) {\r\n        fireDidEvents(opts.enteringEl, opts.leavingEl);\r\n    }\r\n    return {\r\n        hasCompleted: didComplete,\r\n        animation: trans\r\n    };\r\n};\r\nconst noAnimation = async (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    await waitForReady(opts, false);\r\n    fireWillEvents(enteringEl, leavingEl);\r\n    fireDidEvents(enteringEl, leavingEl);\r\n    return {\r\n        hasCompleted: true\r\n    };\r\n};\r\nconst waitForReady = async (opts, defaultDeep) => {\r\n    const deep = opts.deepWait !== undefined ? opts.deepWait : defaultDeep;\r\n    const promises = deep ? [\r\n        deepReady(opts.enteringEl),\r\n        deepReady(opts.leavingEl),\r\n    ] : [\r\n        shallowReady(opts.enteringEl),\r\n        shallowReady(opts.leavingEl),\r\n    ];\r\n    await Promise.all(promises);\r\n    await notifyViewReady(opts.viewIsReady, opts.enteringEl);\r\n};\r\nconst notifyViewReady = async (viewIsReady, enteringEl) => {\r\n    if (viewIsReady) {\r\n        await viewIsReady(enteringEl);\r\n    }\r\n};\r\nconst playTransition = (trans, opts) => {\r\n    const progressCallback = opts.progressCallback;\r\n    const promise = new Promise(resolve => {\r\n        trans.onFinish((currentStep) => resolve(currentStep === 1));\r\n    });\r\n    // cool, let's do this, start the transition\r\n    if (progressCallback) {\r\n        // this is a swipe to go back, just get the transition progress ready\r\n        // kick off the swipe animation start\r\n        trans.progressStart(true);\r\n        progressCallback(trans);\r\n    }\r\n    else {\r\n        // only the top level transition should actually start \"play\"\r\n        // kick it off and let it play through\r\n        // ******** DOM WRITE ****************\r\n        trans.play();\r\n    }\r\n    // create a callback for when the animation is done\r\n    return promise;\r\n};\r\nconst fireWillEvents = (enteringEl, leavingEl) => {\r\n    lifecycle(leavingEl, LIFECYCLE_WILL_LEAVE);\r\n    lifecycle(enteringEl, LIFECYCLE_WILL_ENTER);\r\n};\r\nconst fireDidEvents = (enteringEl, leavingEl) => {\r\n    lifecycle(enteringEl, LIFECYCLE_DID_ENTER);\r\n    lifecycle(leavingEl, LIFECYCLE_DID_LEAVE);\r\n};\r\nconst lifecycle = (el, eventName) => {\r\n    if (el) {\r\n        const ev = new CustomEvent(eventName, {\r\n            bubbles: false,\r\n            cancelable: false,\r\n        });\r\n        el.dispatchEvent(ev);\r\n    }\r\n};\r\nconst shallowReady = (el) => {\r\n    if (el && el.componentOnReady) {\r\n        return el.componentOnReady();\r\n    }\r\n    return Promise.resolve();\r\n};\r\nconst deepReady = async (el) => {\r\n    const element = el;\r\n    if (element) {\r\n        if (element.componentOnReady != null) {\r\n            const stencilEl = await element.componentOnReady();\r\n            if (stencilEl != null) {\r\n                return;\r\n            }\r\n        }\r\n        await Promise.all(Array.from(element.children).map(deepReady));\r\n    }\r\n};\r\nconst setPageHidden = (el, hidden) => {\r\n    if (hidden) {\r\n        el.setAttribute('aria-hidden', 'true');\r\n        el.classList.add('ion-page-hidden');\r\n    }\r\n    else {\r\n        el.hidden = false;\r\n        el.removeAttribute('aria-hidden');\r\n        el.classList.remove('ion-page-hidden');\r\n    }\r\n};\r\nconst setZIndex = (enteringEl, leavingEl, direction) => {\r\n    if (enteringEl !== undefined) {\r\n        enteringEl.style.zIndex = (direction === 'back')\r\n            ? '99'\r\n            : '101';\r\n    }\r\n    if (leavingEl !== undefined) {\r\n        leavingEl.style.zIndex = '100';\r\n    }\r\n};\r\nconst getIonPageElement = (element) => {\r\n    if (element.classList.contains('ion-page')) {\r\n        return element;\r\n    }\r\n    const ionPage = element.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs');\r\n    if (ionPage) {\r\n        return ionPage;\r\n    }\r\n    // idk, return the original element so at least something animates and we don't have a null pointer\r\n    return element;\r\n};\n\nexport { deepReady as d, getIonPageElement as g, lifecycle as l, setPageHidden as s, transition as t };\n","/**\r\n * Does a simple sanitization of all elements\r\n * in an untrusted string\r\n */\r\nconst sanitizeDOMString = (untrustedString) => {\r\n    try {\r\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\r\n            return untrustedString;\r\n        }\r\n        /**\r\n         * Create a document fragment\r\n         * separate from the main DOM,\r\n         * create a div to do our work in\r\n         */\r\n        const documentFragment = document.createDocumentFragment();\r\n        const workingDiv = document.createElement('div');\r\n        documentFragment.appendChild(workingDiv);\r\n        workingDiv.innerHTML = untrustedString;\r\n        /**\r\n         * Remove any elements\r\n         * that are blocked\r\n         */\r\n        blockedTags.forEach(blockedTag => {\r\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\r\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\r\n                const element = getElementsToRemove[elementIndex];\r\n                if (element.parentNode) {\r\n                    element.parentNode.removeChild(element);\r\n                }\r\n                else {\r\n                    documentFragment.removeChild(element);\r\n                }\r\n                /**\r\n                 * We still need to sanitize\r\n                 * the children of this element\r\n                 * as they are left behind\r\n                 */\r\n                const childElements = getElementChildren(element);\r\n                /* tslint:disable-next-line */\r\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\r\n                    sanitizeElement(childElements[childIndex]);\r\n                }\r\n            }\r\n        });\r\n        /**\r\n         * Go through remaining elements and remove\r\n         * non-allowed attribs\r\n         */\r\n        // IE does not support .children on document fragments, only .childNodes\r\n        const dfChildren = getElementChildren(documentFragment);\r\n        /* tslint:disable-next-line */\r\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\r\n            sanitizeElement(dfChildren[childIndex]);\r\n        }\r\n        // Append document fragment to div\r\n        const fragmentDiv = document.createElement('div');\r\n        fragmentDiv.appendChild(documentFragment);\r\n        // First child is always the div we did our work in\r\n        const getInnerDiv = fragmentDiv.querySelector('div');\r\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Clean up current element based on allowed attributes\r\n * and then recursively dig down into any child elements to\r\n * clean those up as well\r\n */\r\nconst sanitizeElement = (element) => {\r\n    // IE uses childNodes, so ignore nodes that are not elements\r\n    if (element.nodeType && element.nodeType !== 1) {\r\n        return;\r\n    }\r\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\r\n        const attribute = element.attributes.item(i);\r\n        const attributeName = attribute.name;\r\n        // remove non-allowed attribs\r\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\r\n            element.removeAttribute(attributeName);\r\n            continue;\r\n        }\r\n        // clean up any allowed attribs\r\n        // that attempt to do any JS funny-business\r\n        const attributeValue = attribute.value;\r\n        /* tslint:disable-next-line */\r\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\r\n            element.removeAttribute(attributeName);\r\n        }\r\n    }\r\n    /**\r\n     * Sanitize any nested children\r\n     */\r\n    const childElements = getElementChildren(element);\r\n    /* tslint:disable-next-line */\r\n    for (let i = 0; i < childElements.length; i++) {\r\n        sanitizeElement(childElements[i]);\r\n    }\r\n};\r\n/**\r\n * IE doesn't always support .children\r\n * so we revert to .childNodes instead\r\n */\r\nconst getElementChildren = (el) => {\r\n    return (el.children != null) ? el.children : el.childNodes;\r\n};\r\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\r\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nexport { sanitizeDOMString as s };\n","const spinners = {\r\n    'bubbles': {\r\n        dur: 1000,\r\n        circles: 9,\r\n        fn: (dur, index, total) => {\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            const angle = 2 * Math.PI * index / total;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circles': {\r\n        dur: 1000,\r\n        circles: 8,\r\n        fn: (dur, index, total) => {\r\n            const step = index / total;\r\n            const animationDelay = `${(dur * step) - dur}ms`;\r\n            const angle = 2 * Math.PI * step;\r\n            return {\r\n                r: 5,\r\n                style: {\r\n                    'top': `${9 * Math.sin(angle)}px`,\r\n                    'left': `${9 * Math.cos(angle)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'circular': {\r\n        dur: 1400,\r\n        elmDuration: true,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 20,\r\n                cx: 48,\r\n                cy: 48,\r\n                fill: 'none',\r\n                viewBox: '24 24 48 48',\r\n                transform: 'translate(0,0)',\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'crescent': {\r\n        dur: 750,\r\n        circles: 1,\r\n        fn: () => {\r\n            return {\r\n                r: 26,\r\n                style: {}\r\n            };\r\n        }\r\n    },\r\n    'dots': {\r\n        dur: 750,\r\n        circles: 3,\r\n        fn: (_, index) => {\r\n            const animationDelay = -(110 * index) + 'ms';\r\n            return {\r\n                r: 6,\r\n                style: {\r\n                    'left': `${9 - (9 * index)}px`,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 17,\r\n                y2: 29,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    },\r\n    'lines-small': {\r\n        dur: 1000,\r\n        lines: 12,\r\n        fn: (dur, index, total) => {\r\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\r\n            const animationDelay = `${(dur * index / total) - dur}ms`;\r\n            return {\r\n                y1: 12,\r\n                y2: 20,\r\n                style: {\r\n                    'transform': transform,\r\n                    'animation-delay': animationDelay,\r\n                }\r\n            };\r\n        }\r\n    }\r\n};\r\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\r\n    return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color) => {\r\n    return (typeof color === 'string' && color.length > 0) ? {\r\n        'ion-color': true,\r\n        [`ion-color-${color}`]: true\r\n    } : undefined;\r\n};\r\nconst getClassList = (classes) => {\r\n    if (classes !== undefined) {\r\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n        return array\r\n            .filter(c => c != null)\r\n            .map(c => c.trim())\r\n            .filter(c => c !== '');\r\n    }\r\n    return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n    const map = {};\r\n    getClassList(classes).forEach(c => map[c] = true);\r\n    return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction) => {\r\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n        const router = document.querySelector('ion-router');\r\n        if (router) {\r\n            if (ev != null) {\r\n                ev.preventDefault();\r\n            }\r\n            return router.push(url, direction);\r\n        }\r\n    }\r\n    return false;\r\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","// Services são os \"serviços\" que podem ser reutilizados por todo o app\r\n// Geralmente são funções\r\n// Service para funções relacionadas ao Dispositivo\r\n\r\nimport { Injectable } from '@angular/core';\r\n// Importação das bibliotecas do AngularFire\r\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DeviceService {\r\n  // Declaração das variáveis\r\n\r\n  // Interface da biblioteca do AngularFire que \"devolve\" na função a lista de dados\r\n  deviceListRef: AngularFireList<any>;\r\n  // Interface da biblioteca do AngularFire que \"devolve\" na função o dado pedido\r\n  deviceRef: AngularFireObject<any>;\r\n  // Declaração da variável status\r\n  status = '';\r\n  // Declaração da variável user\r\n  user: any;\r\n  email: any;\r\n\r\n\r\n  constructor(\r\n    // AngularFireDatabase é uma classe para refernciar o banco\r\n    // Recebeu o apelido de db\r\n    private db: AngularFireDatabase,\r\n  ) {\r\n    this.userEmail();\r\n  }\r\n\r\n  userEmail() {\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n    this.email = this.user.email;\r\n    this.email = this.email.replace(/[.#$@]+/g, '');\r\n  }\r\n\r\n  // Função que \"Pega\" os dados do objeto com o id que foi passado no parâmetro\r\n  getDevice(mac: any) {\r\n    // Atribui ao deviceRef o valor do que foi encontrado no objeto com o seguinte caminho no banco:\r\n    // /dispositivos/id (sendo o id passado junto a função)\r\n    this.deviceRef = this.db.object(`/users/${this.email}/devices/${mac}`);\r\n    // Retorna o deviceRef para a função\r\n    return this.deviceRef;\r\n  }\r\n\r\n  // Função que \"Pega\" a lista de todos objetos com seus respectivos valores\r\n  getDeviceList() {\r\n    // Atribui ao deviceListRef a lista dos objetos encontrados no caminho\r\n    this.deviceListRef = this.db.list(`/users/${this.email}/devices`);\r\n    // Retorna o deviceListRef para a função\r\n    return this.deviceListRef;\r\n  }\r\n\r\n  // Função para atualizar o icone do dispositivo\r\n  updateIcon(icone, nomeIcone, mac) {\r\n    this.db.database.ref(`/users/${this.email}/devices/${mac}/icon/iconName`).set(nomeIcone);\r\n    return this.db.database.ref(`/users/${this.email}/devices/${mac}/icon/icon`).set(icone);\r\n  }\r\n\r\n  // Função para atualizar o nome do dispositivo\r\n  updateName(nome, mac) {\r\n    return this.db.database.ref(`/users/${this.email}/devices/${mac}/name`).set(nome);\r\n  }\r\n\r\n  // Função para atualizar o cômodo que o dispositivo se encontra\r\n  updateRoom(room, iconRoom, mac) {\r\n    this.db.database.ref(`/users/${this.email}/devices/${mac}/room/name`).set(room);\r\n    return this.db.database.ref(`/users/${this.email}/devices/${mac}/room/icon`).set(iconRoom);\r\n  }\r\n\r\n  // Função que exclui os dados do objeto com o id passado\r\n  deleteDevice(mac: any) {\r\n    // Atribui ao deviceRef o objeto que foi encontrado no seguinte caminho:\r\n    // /dispositivos/id (sendo o id passado junto a função)\r\n    this.deviceRef = this.db.object(`/users/${this.email}/devices/${mac}`);\r\n    // Remove o objeto que foi atribuido ao deviceRef\r\n    this.deviceRef.remove();\r\n  }\r\n\r\n  // Função para mudar o status do dispositivo, com a função é passado o parametro id, fornecido pela função\r\n  mudaStatus(mac: any) {\r\n    // Acessa o caminho /dispositivos + id + /status do firebese e \"escuta\" o valor do nó\r\n    this.db.database.ref(`/users/${this.email}/devices/${mac}/status`).once('value').then(snapshot => {\r\n      // Verifica se o valor do nó é igual a 'on'\r\n      if ((snapshot.val()) === 'ligado') {\r\n        // Se for, ele entra no caminho e altera o valor e muda o valor para 'off'\r\n        this.db.database.ref(`/users/${this.email}/devices/${mac}/status`).set('desligado');\r\n      } else {\r\n        // Se não for, ele entra no caminho e altera o valor e muda o valor para 'on'\r\n        this.db.database.ref(`/users/${this.email}/devices/${mac}/status`).set('ligado');\r\n      }\r\n    });\r\n  }\r\n}\r\n","// Services são os \"serviços\" que podem ser reutilizados por todo o app\r\n// Geralmente são funções\r\n// Service para funções relacionadas ao Cômodo\r\n\r\nimport { Injectable } from '@angular/core';\r\n// Importação das bibliotecas do AngularFire\r\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class RoomService {\r\n  // Declaração das variáveis\r\n\r\n  // Interface da biblioteca do AngularFire que \"devolve\" na função a lista de dados\r\n  roomListRef: AngularFireList<any>;\r\n  // Interface da biblioteca do AngularFire que \"devolve\" na função o dado pedido\r\n  roomRef: AngularFireObject<any>;\r\n  // Declaração da variável user\r\n  user: any;\r\n  email: any;\r\n\r\n\r\n  constructor(\r\n    // AngularFireDatabase é uma classe para refernciar o banco\r\n    // Recebeu o apelido de db\r\n    private db: AngularFireDatabase\r\n  ) {\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n    this.email = this.user.email;\r\n    this.email = this.email.replace(/[.#$@]+/g, '');\r\n  }\r\n\r\n  // Função que cria os dados do cômodo\r\n  createRoom(room: any, icone) {\r\n    this.db.object(`/users/${this.email}/rooms/${room}`).set({\r\n      // Cada variavel recebe o dado que foi passado junto ao parâmetro\r\n      name: room,\r\n      icon: icone\r\n    });\r\n  }\r\n\r\n  // Função que \"Pega\" os dados do objeto com o cômodo que foi passado no parâmetro\r\n  getRoom(room: any) {\r\n    // Atribui ao roomRef o objeto do que foi encontrado no caminho passado\r\n    this.roomRef = this.db.object(`/users/${this.email}/rooms/${room}`);\r\n    // Retorna o roomRef para a função\r\n    return this.roomRef;\r\n  }\r\n\r\n  // Função que \"Pega\" a lista de todos objetos com seus respectivos valores\r\n  getRoomList() {\r\n    // Atribui ao roomListRef a lista dos objetos encontrados no caminho\r\n    this.roomListRef = this.db.list(`/users/${this.email}/rooms`);\r\n    // Retorna o roomListRef para a função\r\n    return this.roomListRef;\r\n  }\r\n\r\n  // Função para atualizar o nome do cômodo\r\n  updateName(nome, comodo) {\r\n    this.db.object(`/users/${this.email}/rooms/${comodo}/name`).set(nome);\r\n  }\r\n\r\n  // Função para atualizar o icone do cômodo\r\n  updateIcon(icone, iconName, comodo) {\r\n    this.db.object(`/users/${this.email}/rooms/${comodo}/iconName`).set(iconName);\r\n    return this.db.object(`/users/${this.email}/rooms/${comodo}/icon`).set(icone);\r\n  }\r\n\r\n  // Função que exclui os dados do objeto com o cômodo passado\r\n  deleteRoom(room: any) {\r\n    // Atribui ao roomRef o objeto que foi encontrado no caminho\r\n    this.roomRef = this.db.object(`/users/${this.email}/rooms/${room}`);\r\n    // Remove o objeto que foi atribuido ao roomRef\r\n    this.roomRef.remove();\r\n  }\r\n}\r\n","// Services são os \"serviços\" que podem ser reutilizados por todo o app\r\n// Geralmente são funções\r\n// Service para funções relacionadas ao Timer\r\n\r\nimport { Injectable } from '@angular/core';\r\n// Importação das bibliotecas do AngularFire\r\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class TimerService {\r\n  // Declaração das variáveis\r\n\r\n  // Interface da biblioteca do AngularFire que \"devolve\" na função a lista de dados\r\n  timerListRef: AngularFireList<any>;\r\n  // Interface da biblioteca do AngularFire que \"devolve\" na função o dado pedido\r\n  timerRef: AngularFireObject<any>;\r\n  // Declaração da variável user\r\n  user: any;\r\n\r\n\r\n  constructor(\r\n    // AngularFireDatabase é uma classe para refernciar o banco\r\n    // Recebeu o apelido de db\r\n    private db: AngularFireDatabase\r\n  ) {\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n    this.user.email = this.user.email.replace(/[.#$@]+/g, '');\r\n  }\r\n\r\n  // Função que \"Pega\" a lista de todos objetos com seus respectivos valores\r\n  getTimerList(mac) {\r\n    // Atribui ao deviceListRef a lista dos objetos encontrados no caminho\r\n    this.timerListRef = this.db.list(`/users/${this.user.email}/devices/${mac}/timer`);\r\n    // Retorna o deviceListRef para a função\r\n    return this.timerListRef;\r\n  }\r\n\r\n  // Função que \"Pega\" os dados do timer passado\r\n  getTimer(timer, mac) {\r\n    // Atribui ao timerRef o valor do que foi encontrado no objeto com o seguinte caminho no banco\r\n    this.timerRef = this.db.object(`/users/${this.user.email}/devices/${mac}/timer/${timer}`);\r\n    // Retorna o timerRef para a função\r\n    return this.timerRef;\r\n  }\r\n\r\n  getTimerNumber(mac) {\r\n    this.timerRef = this.db.object(`/users/${this.user.email}/devices/${mac}/timernumber`);\r\n    // Retorna o timerRef para a função\r\n    return this.timerRef;\r\n  }\r\n\r\n  addTimerNumber(mac, timernumber: number) {\r\n    this.db.object(`/users/${this.user.email}/devices/${mac}/timernumber`).set(timernumber);\r\n  }\r\n\r\n  // Função que atualiza os dados do timer\r\n  addTimer(action, dateTime, week1, week2, week3, week4, week5, week6, week7, mac, timernumber) {\r\n    this.timerRef = this.db.object(`/users/${this.user.email}/devices/${mac}/timer/timer${timernumber}`);\r\n    // Retorna para a função a atualização dos dados\r\n    return this.timerRef.set({\r\n      action: action,\r\n      timer: dateTime,\r\n      week1: week1,\r\n      week2: week2,\r\n      week3: week3,\r\n      week4: week4,\r\n      week5: week5,\r\n      week6: week6,\r\n      week7: week7\r\n    });\r\n  }\r\n\r\n  // Função que exclui os dados do timer\r\n  deleteTimer(mac: any, timer: any) {\r\n\r\n    this.timerRef = this.db.object(`/users/${this.user.email}/devices/${mac}/timer/${timer}`);\r\n\r\n    this.timerRef.remove();\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}